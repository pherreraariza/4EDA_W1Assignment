join <- merge(gdp, EDU, by = "CountryCode", all=T)
join$Ranking <- as.numeric(join$Ranking)
View(join)
join <- merge(gdp, EDU, by = "CountryCode", all=T)
View(nonOECD)
View(join)
join <- join %>% filter(Ranking != "")
View(join)
join2 <- join
join2$Ranking <- as.numeric(join2$Ranking)
View(join2)
join2 <- join
join2$Ranking <- as.numeric(as.character(join2$Ranking))
join2 %>% group_by(as.character(Income.Group)) %>% summarise(mean(Ranking))
quantiles <- quantile(join2, probs = seq(0,1, 0.2))
quantiles <- quantile(join2, probs = seq(0,1, 0.2), na.rm = T)
quantiles <- quantile(join2$Ranking, probs = seq(0,1, 0.2), na.rm = T)
quantiles
join2$quantileGDP <- cut(join2$rankingGDP, breaks = quantiles)
join2$quantileGDP <- cut(join2$Ranking, breaks = quantiles)
join2$quantileGDP <- cut(as.numeric(join2$Ranking), breaks = quantiles)
View(join2)
join2 %>% filter(quantiles == (1,38.8))
join2 %>% filter(quantiles == (1,38.8])
join2 %>% group_by(quantiles, Income.Group) %>% summarise(nrows())
join2 %>% group_by(quantileGDP, Income.Group) %>% summarise(nrows())
join2 %>% group_by(quantileGDP, Income.Group) %>% summarise(n())
library(httr)
oauth_endpoints("github")
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "5bed1fb1b397a36c39c3",
secret = "1adce17312a7f5b4780c89d269d33c7a8252cf8b")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library(jsonlite)
data <- fromJSON(req)
data <- fromJSON(toJSON(req))
data <- content(req)
data <- fromJSON(toJSON(data))
View(data)
str(data)
data$full_name$jtleek/datasharing
data$full_name$`jtleek/datasharing`
data$full_name$`jtleek/datasharing`
data$full_name
data$full_name[11]
as.data.frame(data)
data <- as.data.frame(data)
View(data)
data[data$full_name == "jtleek/datasharing", "created_at"]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
source('~/.active-rstudio-document', echo=TRUE)
acs <- read.csv("/Users/pherreraariza/Downloads/acs.csv", stringsAsFactors = FALSE)
install.packages("sqldf")
library(sqldf)
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
query1
sqldf("select AGEP where unique from acs")
sqldf("select distinct AGEP from acs")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n = 10)
lines
?read.fwf
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12",
"filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler",
"sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header = FALSE, skip = 4, col.names = colNames)
d
d <- d[, grep("^[^filler]", names(d))]
d
sum(d[, 4])
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "/Users/pherreraariza/Downloads/idaho.csv")
idaho <- read.csv("/Users/pherreraariza/Downloads/idaho.csv", stringsAsFactors = F)
View(idaho)
?strsplit()
split <- strsplit(idaho, "wgtp")
split <- strsplit(names(idaho), "wgtp")
split[123,]
split[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "/Users/pherreraariza/Downloads/GDP.csv")
GDP <- read.csv("/Users/pherreraariza/Downloads/GDP.csv", stringsAsFactors = F)
View(GDP)
GDP <- read.csv("/Users/pherreraariza/Downloads/GDP.csv", stringsAsFactors = F, skip = 4, nrows = 190)
View(GDP)
GDP$X.4 <- gsub(",", "", GDP$X.4)
View(GDP)
mean(GDP$X.4)
mean(GDP$X.4, na.rm = T)
mean(as.numeric(GDP$X.4), na.rm = T)
grep("^United",GDP$X.3)
grep("^United", as.character(GDP$X.3))
?with
library(datasets)
data(cars)
with(cars, plot(speed, dist))
?plot
plot(cars$speed, cars$dist)
?par
dataFile <- "./data/household_power_consumption.txt"
data <- read.table(dataFile, header = TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
data <- read.table(dataFile, header = TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
getwd
getwd()
dataFile <- "./household_power_consumption.txt"
data <- read.table(dataFile, header = TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
setwd("/Users/pherreraariza/Documents/Coursera/4_Exploratory_Data_Analysis/4EDA_W1Assignment")
dataFile <- "./household_power_consumption.txt"
data <- read.table(dataFile, header = TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
View(data)
file <- "./household_power_consumption.txt"
data <- read.table(file, header = TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataSubset <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
globalActivePower <- as.numeric(subSetData$Global_active_power)
globalActivePower <- as.numeric(dataSubset$Global_active_power)
png("plot1.png", width=480, height=480)
hist(globalActivePower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
hist(data$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
## Plot 1
hist(dataSubset$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
dataSubset$globalActivePower <- as.numeric(dataSubset$Global_active_power)
hist(dataSubset$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
hist(dataSubset$globalActivePower, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
dev.copy(png, file="plot1.png", height=480, width=480)
dev.off()
dataSubset$globalActivePower <- as.numeric(dataSubset$Global_active_power)
file <- "./household_power_consumption.txt"
getwd()
data <- read.table(file, header = TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataSubset <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
dataSubset$globalActivePower <- as.numeric(dataSubset$Global_active_power)
plot(dataSubset$globalActivePower,
ylab="Global Active Power (kilowatts)")
plot(dataSubset$globalActivePower, tyoe = "1",
ylab="Global Active Power (kilowatts)")
View(dataSubset)
datetime <- paste(as.Date(dataSubset$Date), dataSubset$Time)
dataSubset$Datetime <- as.POSIXct(datetime)
plot(dataSubset$globalActivePower ~ dataSubset$Datetime, tyoe = "1",
ylab="Global Active Power (kilowatts)")
View(dataSubset)
dataSubset <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
dataSubset$globalActivePower <- as.numeric(dataSubset$Global_active_power)
dataSubset$Datetime <- paste(as.Date(dataSubset$Date), dataSubset$Time)
dataSubset$Datetime <- paste(as.Date(dataSubset$Date, "%d/%m/%Y"), dataSubset$Time)
dataSubset$Datetime <- as.Date(dataSubset$Datetime, "%d/%m/%Y %H:%M:%S")
dataSubset$Datetime <- paste(as.Date(dataSubset$Date, "%d/%m/%Y"), dataSubset$Time)
dataSubset$Datetime <- as.Date(dataSubset$Datetime)
dataSubset$Datetime <- paste(as.Date(dataSubset$Date, "%d/%m/%Y"), dataSubset$Time)
dataSubset$Datetime <- as.POSIXct(dataSubset$Datetime)
plot(dataSubset$globalActivePower ~ dataSubset$Datetime, tyoe = "1",
ylab="Global Active Power (kilowatts)")
plot(dataSubset$globalActivePower ~ dataSubset$Datetime, tyoe = "1",
ylab="Global Active Power (kilowatts)", xlab="")
plot(dataSubset$globalActivePower ~ dataSubset$Datetime, tyoe = "2",
ylab="Global Active Power (kilowatts)", xlab="")
plot(dataSubset$globalActivePower ~ dataSubset$Datetime, tyoe = "4",
ylab="Global Active Power (kilowatts)", xlab="")
dataSubset$datetime <- strptime(paste(dataSubset$Date, dataSubset$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
warnings()
dataSubset$datetime <- strptime(paste(dataSubset$Date, dataSubset$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(dataSubset$globalActivePower ~ dataSubset$Datetime, tyoe = "1",
ylab="Global Active Power (kilowatts)", xlab="")
plot(dataSubset$globalActivePower ~ dataSubset$Datetime, type = "1",
ylab="Global Active Power (kilowatts)", xlab="")
plot(dataSubset$globalActivePower ~ dataSubset$datetime, type = "1",
ylab="Global Active Power (kilowatts)", xlab="")
plot(dataSubset$globalActivePower ~ dataSubset$datetime, type = "1",
ylab="Global Active Power (kilowatts)", xlab="")
file <- "./household_power_consumption.txt"
data <- read.table(file, header = TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataSubset <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
## Change format to global active power variable
dataSubset$globalActivePower <- as.numeric(dataSubset$Global_active_power)
dataSubset$datetime <- strptime(paste(dataSubset$Date, dataSubset$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
## Plot 2
plot(dataSubset$globalActivePower ~ dataSubset$datetime, type = "1",
ylab="Global Active Power (kilowatts)", xlab="")
plot(dataSubset$Global_active_power~dataSubset$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(dataSubset$datetime ~ dataSubset$globalActivePower, type = "1",
ylab="Global Active Power (kilowatts)", xlab="")
class(dataSubset$datetime)
class(dataSubset$Global_active_power)
dataSubset$Global_active_power <- as.numeric(dataSubset$Global_active_power)
plot(dataSubset$Global_active_power ~ dataSubset$datetime, type = "1",
ylab="Global Active Power (kilowatts)", xlab="")
## Get the data
file <- "./household_power_consumption.txt"
data <- read.table(file, header = TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataSubset <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
## Change format to global active power variable
dataSubset$Global_active_power <- as.numeric(dataSubset$Global_active_power)
dataSubset$datetime <- strptime(paste(dataSubset$Date, dataSubset$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(dataSubset$Global_active_power ~ dataSubset$datetime, type = "1",
ylab="Global Active Power (kilowatts)", xlab="")
data_full <- read.csv("./Data/household_power_consumption.txt", header=T, sep=';', na.strings="?",
nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_full$Date <- as.Date(data_full$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_full, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_full)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 2
plot(data$Global_active_power~data$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
setwd("/Users/pherreraariza/Documents/Coursera/4_Exploratory_Data_Analysis/4EDA_W1Assignment")
data_full <- read.csv("./Data/household_power_consumption.txt", header=T, sep=';', na.strings="?",
nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_full$Date <- as.Date(data_full$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_full, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_full)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 2
plot(data$Global_active_power~data$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
setwd("/Users/pherreraariza/Documents/Coursera/4_Exploratory_Data_Analysis/4EDA_W1Assignment")
data_full <- read.csv("./Data/household_power_consumption.txt", header=T, sep=';', na.strings="?",
nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_full$Date <- as.Date(data_full$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_full, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_full)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 2
plot(data$Global_active_power~data$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
data_full <- read.csv("./Data/household_power_consumption.txt", header=T, sep=';', na.strings="?",
nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_full$Date <- as.Date(data_full$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_full, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_full)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 2
plot(data$Global_active_power~data$Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
setwd("/Users/pherreraariza/Documents/Coursera/4_Exploratory_Data_Analysis/4EDA_W1Assignment")
## Get the data
file <- "./household_power_consumption.txt"
data <- read.table(file, header = TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataSubset <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
## Change format to global active power variable
dataSubset$Global_active_power <- as.numeric(dataSubset$Global_active_power)
dataSubset$datetime <- strptime(paste(dataSubset$Date, dataSubset$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(dataSubset$datetime, dataSubset$Global_active_power, type = "1",
ylab="Global Active Power (kilowatts)", xlab="")
class(dataSubset$Global_active_power)
class(dataSubset$datetime)
plot(dataSubset$datetime, dataSubset$Global_active_power, type = "1",
xlab="", ylab="Global Active Power (kilowatts)")
plot(dataSubset$datetime, dataSubset$Global_active_power,
xlab="", ylab="Global Active Power (kilowatts)")
plot(dataSubset$datetime, dataSubset$Global_active_power, type=1
xlab="", ylab="Global Active Power (kilowatts)")
plot(dataSubset$datetime, dataSubset$Global_active_power, type="1" ,
xlab="", ylab="Global Active Power (kilowatts)")
plot(dataSubset$datetime, dataSubset$Global_active_power, type="2", xlab="", ylab="Global Active Power (kilowatts)")
plot(dataSubset$datetime, dataSubset$Global_active_power, type="0", xlab="", ylab="Global Active Power (kilowatts)")
?plot
plot(dataSubset$datetime, dataSubset$Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
dataSubset$Sub_metering_1 <- as.numeric(dataSubset$Sub_metering_1)
dataSubset$Sub_metering_2 <- as.numeric(dataSubset$Sub_metering_2)
dataSubset$Sub_metering_3 <- as.numeric(dataSubset$Sub_metering_3)
plot(dataSubset$datetime, dataSubset$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSubset$Sub_metering_2, col="red")
lines(dataSubset$Sub_metering_3, col="blue")
setwd("/Users/pherreraariza/Documents/Coursera/4_Exploratory_Data_Analysis/4EDA_W1Assignment")
## Get the data
file <- "./household_power_consumption.txt"
data <- read.table(file, header = TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataSubset <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
## Change format to global active power variable
dataSubset$Sub_metering_1 <- as.numeric(dataSubset$Sub_metering_1)
dataSubset$Sub_metering_2 <- as.numeric(dataSubset$Sub_metering_2)
dataSubset$Sub_metering_3 <- as.numeric(dataSubset$Sub_metering_3)
dataSubset$datetime <- strptime(paste(dataSubset$Date, dataSubset$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
plot(dataSubset$datetime, dataSubset$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSubset$datetime, dataSubset$Sub_metering_2, col="red")
lines(dataSubset$datetime, dataSubset$Sub_metering_3, col="blue")
## Saving to file
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
setwd("/Users/pherreraariza/Documents/Coursera/4_Exploratory_Data_Analysis/4EDA_W1Assignment")
## Get the data
file <- "./household_power_consumption.txt"
data <- read.table(file, header = TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataSubset <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
## Change format to dates and sub metering variables
dataSubset$Global_active_power <- as.numeric(dataSubset$Global_active_power)
dataSubset$Global_reactive_power <- as.numeric(dataSubset$Global_reactive_power)
dataSubset$Voltage <- as.numeric(dataSubset$Voltage)
dataSubset$Sub_metering_1 <- as.numeric(dataSubset$Sub_metering_1)
dataSubset$Sub_metering_2 <- as.numeric(dataSubset$Sub_metering_2)
dataSubset$Sub_metering_3 <- as.numeric(dataSubset$Sub_metering_3)
dataSubset$datetime <- strptime(paste(dataSubset$Date, dataSubset$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
par(mfrow=c(2,2)
plot(dataSubset$datetime, dataSubset$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSubset$datetime, dataSubset$Sub_metering_2, col="red")
lines(dataSubset$datetime, dataSubset$Sub_metering_3, col="blue")
## Saving to file
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
plot(dataSubset$datetime,dataSubset$Global_active_power, type="l", xlab="", ylab="Global Active Power")
plot(dataSubset$timestamp, dataSubset$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(dataSubset$datetime, dataSubset$Voltage, type="l", xlab="datetime", ylab="Voltage")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1))
par(mfrow=c(2,2)
plot(dataSubset$datetime,dataSubset$Global_active_power, type="l", xlab="", ylab="Global Active Power")
plot(dataSubset$datetime, dataSubset$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(dataSubset$datetime, dataSubset$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSubset$datetime, dataSubset$Sub_metering_2, col="red")
lines(dataSubset$datetime, dataSubset$Sub_metering_3, col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1))
plot(dataSubset$datetime, dataSubset$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
## Plot 4
par(mfrow=c(2,2)
plot(dataSubset$datetime,dataSubset$Global_active_power, type="l", xlab="", ylab="Global Active Power")
plot(dataSubset$datetime, dataSubset$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(dataSubset$datetime, dataSubset$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSubset$datetime, dataSubset$Sub_metering_2, col="red")
lines(dataSubset$datetime, dataSubset$Sub_metering_3, col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1))
plot(dataSubset$datetime, dataSubset$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
## Saving to file
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
## Plot 4
par(mfrow=c(2,2))
plot(dataSubset$datetime,dataSubset$Global_active_power, type="l", xlab="", ylab="Global Active Power")
plot(dataSubset$datetime, dataSubset$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(dataSubset$datetime, dataSubset$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSubset$datetime, dataSubset$Sub_metering_2, col="red")
lines(dataSubset$datetime, dataSubset$Sub_metering_3, col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1))
plot(dataSubset$datetime, dataSubset$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
## Saving to file
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
## Plot 4
par(mfrow=c(2,2))
plot(dataSubset$datetime,dataSubset$Global_active_power, type="l", xlab="", ylab="Global Active Power")
plot(dataSubset$datetime, dataSubset$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(dataSubset$datetime, dataSubset$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSubset$datetime, dataSubset$Sub_metering_2, col="red")
lines(dataSubset$datetime, dataSubset$Sub_metering_3, col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1),, bty="n", cex=.)
plot(dataSubset$datetime, dataSubset$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
## Saving to file
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
## Plot 4
par(mfrow=c(2,2))
plot(dataSubset$datetime,dataSubset$Global_active_power, type="l", xlab="", ylab="Global Active Power")
plot(dataSubset$datetime, dataSubset$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(dataSubset$datetime, dataSubset$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSubset$datetime, dataSubset$Sub_metering_2, col="red")
lines(dataSubset$datetime, dataSubset$Sub_metering_3, col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1), bty="n", cex=.)
plot(dataSubset$datetime, dataSubset$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
## Saving to file
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
## Plot 4
par(mfrow=c(2,2))
plot(dataSubset$datetime,dataSubset$Global_active_power, type="l", xlab="", ylab="Global Active Power")
plot(dataSubset$datetime, dataSubset$Voltage, type="l", xlab="datetime", ylab="Voltage")
plot(dataSubset$datetime, dataSubset$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSubset$datetime, dataSubset$Sub_metering_2, col="red")
lines(dataSubset$datetime, dataSubset$Sub_metering_3, col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1), bty="n", cex=.5)
plot(dataSubset$datetime, dataSubset$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
## Saving to file
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
setwd("/Users/pherreraariza/Documents/Coursera/4_Exploratory_Data_Analysis/4EDA_W1Assignment")
## Get the data
file <- "./household_power_consumption.txt"
data <- read.table(file, header = TRUE, sep=";", stringsAsFactors=FALSE, dec=".")
dataSubset <- data[data$Date %in% c("1/2/2007","2/2/2007") ,]
## Change format to global active power variable
dataSubset$Global_active_power <- as.numeric(dataSubset$Global_active_power)
## Plot 1
hist(dataSubset$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
## Saving to file
dev.copy(png, file="plot1.png", height=480, width=480)
dev.off()
## Plot 1
hist(dataSubset$Global_active_power, main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
## Saving to file
dev.copy(png, file="plot1.png", height=480, width=480)
dev.off()
data$datetime = paste(data$Date, data$Time)
View(data)
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(airquality)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, airquality, col="red",pch=8, main="Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout=c(5,1)
)
xyplot(Ozone~Wind | Month, data=airquality, layout=c(5,1)
)
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit(myLabels.R)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE,pch=20,xlab=myxlab, ylab = myylab, main=mymain)
xyplot(price~carat|color*cut, data=diamonds, pch=20,xlab=myxlab, ylab = myylab, main=mymain)
sample(colors())
sample(colors(), 10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
myedit(showMe())
myedit("showMe.R")
showMe(p2(20)
)
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha=.5)
p3(5)
plot(x, y, pch=19, col=rgb(0,.5,.5))
plot(x, y, pch=19, col=rgb(0,.5,.5, .3))
cols <- brewer.pal(3, "BuGn")
showMe(cols())
showMe(cols
)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
install.packages("ggplot2movies")
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
